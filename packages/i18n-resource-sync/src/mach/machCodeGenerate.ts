import * as fs from 'fs-extra';
import * as path from 'path';
import { cwd } from '../constants';
import { Package } from '../types';

/**
 * 生成resources.ts文件，将语言包集成整合
 */
const machCodeGenerate = (packages: any = [], params) => {
    const { namespaceName = 'translation', dest = 'src/assets/locales' } =
        params || {};
    const codeInfo = [];
    const resourcesFile = path.join(cwd, `./${dest}`, 'resources.ts');
    packages.forEach((item: Package) => {
        const { locale } = item;
        codeInfo.push({
            locale,
            importDeclare: `import ${locale.replace(
                /-/g,
                ''
            )}_${namespaceName} from './${locale}/${namespaceName}.json';`,
            importVar: `${locale.replace(/-/g, '')}_${namespaceName}`,
            i18nextNS: namespaceName,
        });
    });
    const importContent = codeInfo
        .map((item: any) => item.importDeclare)
        .join('\n');
    let bodyContent: string = codeInfo
        .map((item: any) => {
            return `    '${item.locale}': {\n        ${item.i18nextNS}: ${item.importVar}\n    }`;
        })
        .join(',\n');

    bodyContent = `const resources = {\n${bodyContent}\n};`;

    const exportContent = 'export default resources;';
    const resourceCode = [
        '// This file was auto generated by resource-sync tools.',
        importContent,
        bodyContent,
        exportContent,
    ].join('\n\n');
    fs.writeFileSync(resourcesFile, resourceCode, 'utf8');
};

export { machCodeGenerate };
